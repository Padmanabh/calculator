{"version":3,"sources":["App.js","Formula.js","Output.js","Buttons.js","index.js"],"names":["App","isOperator","initialState","currentVal","prevVal","formula","stack","prevStack","currentSign","lastClicked","evaluated","useState","calc","setCalc","handleDecimal","e","value","target","step1","replace","substr","indexOf","step2","prev","handleEvaluate","lestack","push","expression","join","eval","replaceAll","initialize","handleNumbers","handleOperators","test","length","symbols","lastChar","className","output","decimal","evaluate","numbers","operators","Formula","Output","id","Buttons","props","operatorStyle","background","onClick","style","position","height","bottom","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4336a70a.chunk.js","sourcesContent":["import \"./App.css\";\nimport Formula from \"./Formula\";\nimport Output from \"./Output\";\nimport Buttons from \"./Buttons\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const isOperator = /[*/+-]+/;\n\n  const initialState = {\n    currentVal: \"0\",\n    prevVal: \"0\",\n    formula: \"\",\n    stack: [],\n    prevStack: [],\n    currentSign: \"pos\",\n    lastClicked: \"\",\n    evaluated: false,\n  };\n  const [calc, setCalc] = useState(initialState);\n\n  function handleDecimal(e) {\n    let value = e.target.value;\n    let currentVal = calc.currentVal;\n    currentVal =\n      currentVal === \".\"\n        ? \"0\" + value\n        : currentVal + value;\n\n    currentVal = currentVal.replace(\"..\", \".\");\n    let step1 = currentVal.substr(0, currentVal.indexOf('.'));\n    let step2 = currentVal.substr(currentVal.indexOf('.') + 1).replace(\".\", \"\")\n    setCalc((prev) => ({ ...prev, currentVal: step1 + \".\" + step2 }));\n  }\n  function handleEvaluate() {\n    let lestack = calc.stack;\n    let currentVal = calc.currentVal;\n    lestack.push(currentVal);\n    let expression = lestack.join(\"\");\n    currentVal = eval(expression.replaceAll(\"--\", \"+\").replaceAll(\"++\",\"+\"));\n    lestack.push(\"=\");\n    lestack.push(currentVal);\n\n    setCalc(prev => ({\n      ...prev, currentVal: currentVal, prevStack: lestack, stack: [], evaluated: true\n    }))\n  }\n  function initialize() {\n    setCalc(initialState);\n  }\n  function handleNumbers(e) {\n    let value = e.target.value;\n    let currentVal = calc.currentVal;\n    currentVal =\n      currentVal === \"0\"\n        ? value\n        : currentVal + value;\n\n    setCalc((prev) => ({ ...prev, currentVal: currentVal }));\n  }\n\n  function handleOperators(e) {\n    let stack = calc.stack;\n    if(calc.currentVal!== \"\")\n      stack.push(calc.currentVal)\n    if (isOperator.test(stack[stack.length-1])) {\n        stack[stack.length-1] += e.target.value;\n    }\n    else {\n      stack.push(e.target.value);\n    }\n    let symbols = stack[stack.length - 1];\n    let lastChar = symbols.substr(symbols.length - 1, 1);\n    stack[stack.length - 1] = lastChar !== \"-\" ? lastChar : symbols;\n    \n    setCalc((prev) => ({ ...prev, stack: stack, currentVal: \"\", evaluated: false }));\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"calculator\">\n        <Formula formula={calc.evaluated ? calc.prevStack.join(\"\") : calc.stack.join(\"\")} />\n        <Output output={calc.currentVal} />\n        <Buttons\n          decimal={handleDecimal}\n          evaluate={handleEvaluate}\n          initialize={initialize}\n          numbers={handleNumbers}\n          operators={handleOperators}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react'\r\n\r\nconst Formula = ({formula}) => {\r\n    return (\r\n        <div className=\"formulaScreen\">{formula}</div>\r\n    )\r\n}\r\n\r\nexport default Formula\r\n","import React from \"react\";\r\n\r\nconst Output = ({output}) => {\r\n  return (\r\n    <div className=\"outputScreen\" id=\"display\">\r\n      {output}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Output;\r\n","import React from \"react\";\r\n\r\nconst Buttons = (props) => {\r\n  const clearStyle = { background: \"#ac3939\" };\r\n  const operatorStyle = { background: \"#666666\" };\r\n  const equalsStyle = {\r\n    background: \"#004466\",\r\n    position: \"absolute\",\r\n    height: 130,\r\n    bottom: 5,\r\n  };\r\n  return (\r\n    <div>\r\n      <button\r\n        className=\"jumbo\"\r\n        id=\"clear\"\r\n        onClick={props.initialize}\r\n        style={clearStyle}\r\n        value=\"AC\"\r\n      >\r\n        AC\r\n      </button>\r\n      <button\r\n        id=\"divide\"\r\n        onClick={props.operators}\r\n        style={operatorStyle}\r\n        value=\"/\"\r\n      >\r\n        /\r\n      </button>\r\n      <button\r\n        id=\"multiply\"\r\n        onClick={props.operators}\r\n        style={operatorStyle}\r\n        value=\"*\"\r\n      >\r\n        x\r\n      </button>\r\n      <button id=\"seven\" onClick={props.numbers} value=\"7\">\r\n        7\r\n      </button>\r\n      <button id=\"eight\" onClick={props.numbers} value=\"8\">\r\n        8\r\n      </button>\r\n      <button id=\"nine\" onClick={props.numbers} value=\"9\">\r\n        9\r\n      </button>\r\n      <button\r\n        id=\"subtract\"\r\n        onClick={props.operators}\r\n        style={operatorStyle}\r\n        value=\"-\"\r\n      >\r\n        â€‘\r\n      </button>\r\n      <button id=\"four\" onClick={props.numbers} value=\"4\">\r\n        4\r\n      </button>\r\n      <button id=\"five\" onClick={props.numbers} value=\"5\">\r\n        5\r\n      </button>\r\n      <button id=\"six\" onClick={props.numbers} value=\"6\">\r\n        6\r\n      </button>\r\n      <button\r\n        id=\"add\"\r\n        onClick={props.operators}\r\n        style={operatorStyle}\r\n        value=\"+\"\r\n      >\r\n        +\r\n      </button>\r\n      <button id=\"one\" onClick={props.numbers} value=\"1\">\r\n        1\r\n      </button>\r\n      <button id=\"two\" onClick={props.numbers} value=\"2\">\r\n        2\r\n      </button>\r\n      <button id=\"three\" onClick={props.numbers} value=\"3\">\r\n        3\r\n      </button>\r\n      <button className=\"jumbo\" id=\"zero\" onClick={props.numbers} value=\"0\">\r\n        0\r\n      </button>\r\n      <button id=\"decimal\" onClick={props.decimal} value=\".\">\r\n        .\r\n      </button>\r\n      <button\r\n        id=\"equals\"\r\n        onClick={props.evaluate}\r\n        style={equalsStyle}\r\n        value=\"=\"\r\n      >\r\n        =\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Buttons;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}